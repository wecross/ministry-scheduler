datasource db {
  provider = "sqlite"
  url      = env("DB_URL")
}

// output        = "./client"
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["darwin"]
}

model Person {
  id                     String                @default(uuid()) @id
  firstName              String
  lastName               String
  email                  String
  phone                  String?
  active                 Boolean               @default(true)
  scheduledMinistryDay   ScheduledMinistryDay? @relation(fields: [scheduledMinistryDayId], references: [date])
  scheduledMinistryDayId String?
  // added by prisma
  monthlyAvailability    MonthlyAvailability[]

  @@unique([firstName, lastName], name: "name_unique")
}

model MonthlySchedule {
  date String                 @id
  days ScheduledMinistryDay[]
}

model MonthlyAvailability {
  id                   String              @default(uuid()) @id
  date                 String
  // if full availability is checked, it means the person is available for the full day found in date
  fullAvailability     Boolean?            @default(true)
  dayEntry             MinistryDayEntry?   @relation(fields: [dayEntryId], references: [id])
  dayEntryId           String?
  person               Person?             @relation(fields: [personId], references: [id])
  personId             String?
  entryAvailable       Boolean?
  MinistryDayPattern   MinistryDayPattern? @relation(fields: [ministryDayPatternId], references: [id])
  ministryDayPatternId String?
}

model ScheduledMinistryDay {
  // will be like: 2020-05-02
  date              String             @id
  pattern           MinistryDayPattern @relation(fields: [patternId], references: [id])
  patternId         String
  persons           Person[]
  // added by prisma
  monthlySchedule   MonthlySchedule?   @relation(fields: [monthlyScheduleId], references: [date])
  monthlyScheduleId String?
}

// this can be for example a Sunday
// or a Thursday
model MinistryDayPattern {
  id                   String                 @default(uuid()) @id
  // name could be "regular Sunday"
  name                 String
  entries              MinistryDayEntry[]
  // added by prisma
  scheduledMinistryDay ScheduledMinistryDay[]
  monthlyAvailability  MonthlyAvailability[]
}

model Importance {
  id               String             @default(uuid()) @id
  name             String
  scale            Int
  // added by prisma
  // for now one way relationship is not possible in prisma, so have to do put this here as well
  MinistryDayEntry MinistryDayEntry[]
}

// this is a single service that is done in a certain day: eg: "Bible hour teaching"
// can have a description an expected duration and optionally an importance
model MinistryDayEntry {
  id                      String                @default(uuid()) @id
  description             String
  label                   String?
  expectedDurationMinutes Int?
  importance              Importance            @relation(fields: [importanceId], references: [id])
  importanceId            String
  // added by prisma
  // this should not be here, but prisma cannot have one-sided relations for now, so keep it here
  ministryDayPattern      MinistryDayPattern?   @relation(fields: [ministryDayPatternId], references: [id])
  ministryDayPatternId    String?
  MonthlyAvailability     MonthlyAvailability[]
}